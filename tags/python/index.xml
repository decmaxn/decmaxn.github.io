<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title>python - Tag - Victor Ma</title><link>https://decmaxn.github.io/tags/python/</link><description>python - Tag - Victor Ma</description><generator>Hugo -- gohugo.io</generator><language>en</language><copyright>This work is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License.</copyright><lastBuildDate>Mon, 13 Feb 2023 08:43:10 -0500</lastBuildDate><atom:link href="https://decmaxn.github.io/tags/python/" rel="self" type="application/rss+xml"/><item><title>Stop_ecs_task</title><link>https://decmaxn.github.io/python/stop_ecs_task/</link><pubDate>Mon, 13 Feb 2023 08:43:10 -0500</pubDate><author>Victor Ma</author><guid>https://decmaxn.github.io/python/stop_ecs_task/</guid><description>Interact with AWS resource with boto3 This is used in an AWS Lambda been triggered daily to do a maintenance task.
Todo: Add logging
1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 import boto3 import os def handler(event, context): &amp;#34; This function stop all AWS ECS tasks of CLUSTER_NAME and SERVICE_NAME when it&amp;#39;s triggered client = boto3.</description></item><item><title>Exception</title><link>https://decmaxn.github.io/python/exception/</link><pubDate>Sun, 12 Feb 2023 21:11:12 -0500</pubDate><author>Victor Ma</author><guid>https://decmaxn.github.io/python/exception/</guid><description><![CDATA[Exception Mechanism for interrupting normal program flow and continuing in surrounding context.
 event is raising an exception handling an exception with exception handler unhandled exceptions cause termination Exception objects transferred from event to handler  Exception are ubiquitous in Python compare with other programing languages.
exceptional.py with unhandled exception 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19  DIGIT_MAP = { &#39;zero&#39;: &#39;0&#39;, &#39;one&#39;: &#39;1&#39;, &#39;two&#39;: &#39;2&#39;, &#39;three&#39;: &#39;3&#39;, &#39;four&#39;: &#39;4&#39;, &#39;five&#39;: &#39;5&#39;, &#39;six&#39;: &#39;6&#39;, &#39;seven&#39;: &#39;7&#39;, &#39;eight&#39;: &#39;8&#39;, &#39;nine&#39;: &#39;9&#39;, } def convert(s): number = &#39;&#39; for token in s: number += DIGIT_MAP[token] x = int(number) return x   Now let&rsquo;s make a good call and an exception]]></description></item><item><title>Function</title><link>https://decmaxn.github.io/python/function/</link><pubDate>Sun, 12 Feb 2023 19:09:37 -0500</pubDate><author>Victor Ma</author><guid>https://decmaxn.github.io/python/function/</guid><description><![CDATA[Simple function 1 2 3 4 5 6  def greeting(name): # order matters, define first print(&#34;Hello&#34;, name) #main program input_name = input(&#34;Enter your name:\n&#34;) greeting(input_name)   Scope The input_name is a global var and has global scope,
1 2 3  # name is not defined - cause it&#39;s defined and only avaible in the func # print(&#34;Thanks&#34;, name) print(&#34;Thanks&#34;, input_name) # input_name is defined outside of func   This greeting_global function uses a global var]]></description></item><item><title>Venv and API call</title><link>https://decmaxn.github.io/python/venv_and_api/</link><pubDate>Sun, 12 Feb 2023 17:12:35 -0500</pubDate><author>Victor Ma</author><guid>https://decmaxn.github.io/python/venv_and_api/</guid><description>Venv Creating virtual env, make sure to slect vscode python interpreter after.
1 2 3 4 $ python3 -m venv venv $ source venv/bin/activate (venv) $ pip3 install requests $ deactivate Api call example First sign up at Open weather and get an API key.
1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 import requests # Copy/paste from Open weatcher:&amp;#34;https://api.</description></item><item><title>Loop_list_and_dictionary</title><link>https://decmaxn.github.io/python/loop_list_and_dictionary/</link><pubDate>Sun, 12 Feb 2023 16:53:04 -0500</pubDate><author>Victor Ma</author><guid>https://decmaxn.github.io/python/loop_list_and_dictionary/</guid><description><![CDATA[Two loop variables in one loop with items method of dictionary This way, you can get both the key and value of each key value pair at the same time
1 2 3 4 5 6 7 8  Chars = { &#39;letters&#39;: &#39;abcde...&#39;, &#39;numbers&#39;: 1234567890, &#39;special&#39;: &#39;!@#$%...&#39; } for key, value in Chars.items(): # items method of dictionary print(key,&#39;includes&#39;,value)   Dictionary represent object 1 2 3 4 5 6 7 8 9 10 11 12  contacts = { # use dictionary for object &#34;number&#34;: 4, &#34;students&#34;: [ #List of dictionaries {&#34;name&#34;:&#34;Sarah&#34;, &#34;email&#34;:&#34;sarah@email.]]></description></item><item><title>Dictionary</title><link>https://decmaxn.github.io/python/dictionary/</link><pubDate>Sat, 11 Feb 2023 15:41:50 -0500</pubDate><author>Victor Ma</author><guid>https://decmaxn.github.io/python/dictionary/</guid><description><![CDATA[Compare with javascript object In Python, dictionaries are data structures that store key-value pairs. Each key maps to a unique value within the dictionary, and you can use the keys to look up the corresponding values. For example:
1 2  person = {&#39;name&#39;: &#39;John&#39;, &#39;age&#39;: 32, &#39;city&#39;: &#39;New York&#39;} print(person[&#39;name&#39;]) # Output: John   In JavaScript, objects serve a similar purpose as dictionaries in Python. They also store key-value pairs, and you can use the keys to look up the corresponding values.]]></description></item><item><title>List_and_loops</title><link>https://decmaxn.github.io/python/list_and_loops/</link><pubDate>Fri, 10 Feb 2023 13:32:46 -0500</pubDate><author>Victor Ma</author><guid>https://decmaxn.github.io/python/list_and_loops/</guid><description><![CDATA[Lists and Loop 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23  empty_list = [] print(empty_list) str_list = [&#34;hello&#34;,&#34;world&#34;,&#34;4.5&#34;] print(str_list) print(&#34;The first item of str_list is &#34; + str(str_list[0])) # Refer to a item in the list mixed_list=[&#34;hello&#34;,100,4.5] print(mixed_list) mixed_list.append(&#34;AppendedItem&#34;) # Append method print(mixed_list) if &#34;AppendedItem&#34; in mixed_list: mixed_list.remove(&#34;AppendedItem&#34;) # Remove method print(&#34;AppendedItem is exist and removed&#34;) print(mixed_list) del mixed_list[0] # Use del if you want to use the sequence number print(mixed_list) list_list = [empty_list,str_list,mixed_list] print(list_list) for x in list_list: print(x)   Range 1 2 3 4 5 6 7 8 9 10 11  expenses = [] total = 0 num_expenses = int(input(&#34;Enter nubmer of expenses:\n&#34;)) for i in range(num_expenses): expenses.]]></description></item><item><title>Simple math caculation</title><link>https://decmaxn.github.io/python/age_calculator/</link><pubDate>Thu, 09 Feb 2023 11:24:40 -0500</pubDate><author>Victor Ma</author><guid>https://decmaxn.github.io/python/age_calculator/</guid><description><![CDATA[Install Python and Hello world Make sure you have it installed
1 2 3 4 5 6 7 8 9 10 11  $ python3 --version Python 3.8.10 $ python3 Python 3.8.10 (default, Nov 14 2022, 12:59:47) [GCC 9.4.0] on linux Type &#34;help&#34;, &#34;copyright&#34;, &#34;credits&#34; or &#34;license&#34; for more information. &gt;&gt;&gt; $ cat hello_world.py print(&#34;Hello world!&#34;) $ python3 hello_world.py Hello world!   extension for vscode After installed ms-python.python vscode extention and select Python interpreterï¼ˆI never know that I have python2 pre-installed too), I can now click on run button to run the .]]></description></item><item><title>Condition_and_module</title><link>https://decmaxn.github.io/python/condition_and_module/</link><pubDate>Wed, 08 Feb 2023 12:33:27 -0500</pubDate><author>Victor Ma</author><guid>https://decmaxn.github.io/python/condition_and_module/</guid><description><![CDATA[Comparators 1 2 3 4 5  &gt;&gt;&gt; temp = 95 # Assignment &gt;&gt;&gt; temp == 85 # Comparator False &gt;&gt;&gt; temp == 95 True   Condition and logical operator 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25  temp = int(input(&#34;What is the temporature?\n&#34;)) if temp &lt;= 95 and temp &gt;=45: # AND Logical operators  print(&#34;Nice, go outside&#34;) #indented code inside a &#34;Code block&#34; print(&#34;There is 4 spaces before this line insead of a tab&#34;) # Tab or 4 spaces # print(&#34;There is 2 spaces before this line insead of a tab or 4 spaces&#34;) IndentationError elif temp &gt; 95: print(&#34;Too hot, stay inside&#34;) else: print(&#34;Too cold, stay inside&#34;) if temp &gt; 95 or temp &lt; 45: # OR logical opeartor print(&#34;stay inside&#34;) else: print(&#34;Go outside&#34;) forcast = &#34;rain&#34; if not forcast == &#34;rain&#34;: # Not logical operator print(&#34;Go outside&#34;) else: print(&#34;stay inside&#34;) raining = True # Condition with Boolean Data type VAR if raining: # It&#39;s more like plain english print(&#34;Stay inside, it&#39;s raining&#34;)   Modules Not only built-in types are installed together with Python, Python standard Library, etc.]]></description></item></channel></rss>