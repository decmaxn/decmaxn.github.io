<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title>course - Tag - Victor Ma</title><link>https://decmaxn.github.io/tags/course/</link><description>course - Tag - Victor Ma</description><generator>Hugo -- gohugo.io</generator><language>en</language><copyright>This work is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License.</copyright><lastBuildDate>Sun, 26 Feb 2023 23:11:54 -0500</lastBuildDate><atom:link href="https://decmaxn.github.io/tags/course/" rel="self" type="application/rss+xml"/><item><title>Devcontainer_tdd</title><link>https://decmaxn.github.io/go/devcontainer_tdd/</link><pubDate>Sun, 26 Feb 2023 23:11:54 -0500</pubDate><author>Victor Ma</author><guid>https://decmaxn.github.io/go/devcontainer_tdd/</guid><description>.devcontainer Run vscode command palette, Dev Conainter and search universal, this way to get Codespaces default container. Later on add pwsh.
TDD: Test-driven development Follow Hello world to practice TDD.</description></item><item><title>Map</title><link>https://decmaxn.github.io/go/map/</link><pubDate>Sun, 26 Feb 2023 16:35:38 -0500</pubDate><author>Victor Ma</author><guid>https://decmaxn.github.io/go/map/</guid><description><![CDATA[Map Map can store any types key and value pairs, there is no order. There is no fixed size, and you can tell it&rsquo;s a pointer.
We have to give map key word to tell it&rsquo;s type, it&rsquo;s not like this before. Follow that is key type in [] and value type.
1 2 3 4 5 6 7 8 9 10 11 12 13  m := map[string]int{&#34;foo&#34;: 1, &#34;bar&#34;: 2} fmt.]]></description></item><item><title>Array_slice</title><link>https://decmaxn.github.io/go/array_slice/</link><pubDate>Sun, 26 Feb 2023 15:48:50 -0500</pubDate><author>Victor Ma</author><guid>https://decmaxn.github.io/go/array_slice/</guid><description><![CDATA[Array It&rsquo;s similar with Python&rsquo;s array. In Go, array is also a continues memoery block in fixed size, so it&rsquo;s faster but not dynamic.
It also stores same type objects. What different is Go array is not a pointer.
1 2 3 4 5 6 7 8 9  var myarray [3]int // signature of array is [size]type 	fmt.Println(myarray) // [0 0 0] 	myarray[0] = 3 fmt.Println(myarray[0]) // 3 	arr := [3]int{1, 2, 3} // declare implicitly, it&#39;s not [1 2 3] 	fmt.]]></description></item><item><title>Constant</title><link>https://decmaxn.github.io/go/constant/</link><pubDate>Sun, 26 Feb 2023 15:04:15 -0500</pubDate><author>Victor Ma</author><guid>https://decmaxn.github.io/go/constant/</guid><description>Normal features of Go constant Normal side of Go constant:
declare and assign at the same time, can not be done separately. Value has to be determined in complie time, not run time The type of constant can be implicit, or explicit if you need to 1 2 3 4 5 const pi = 3 // type not assigned fmt.Println(pi) // pi is treated as int fmt.</description></item><item><title>Var_primitives_pointer</title><link>https://decmaxn.github.io/go/var_primitives_pointer/</link><pubDate>Sun, 26 Feb 2023 12:40:50 -0500</pubDate><author>Victor Ma</author><guid>https://decmaxn.github.io/go/var_primitives_pointer/</guid><description><![CDATA[Declaring var with Primitive Data Types Easy to understand way:
1 2 3  var num int num = 11 fmt.Println(num)   Esay to write way:
1 2 3  var num int = 11 var greeting string = &#34;Hello&#34; fmt.Println(num, greeting)   Normal way:
1 2 3  num := 11 greeting := &#34;Hello&#34; fmt.Println(num, greeting)   declaring multiple vars at the same time
1 2 3 4 5 6  // Declare three integer variables named &#34;x&#34;, &#34;y&#34;, and &#34;z&#34; with initial values of 1, 2, and 3, respectively 	x, y, z := 1, 2, 3 fmt.]]></description></item><item><title>Install Config</title><link>https://decmaxn.github.io/go/install-config/</link><pubDate>Sat, 25 Feb 2023 22:05:35 -0500</pubDate><author>Victor Ma</author><guid>https://decmaxn.github.io/go/install-config/</guid><description><![CDATA[Installation download Go itself for windows and install, confirm with go version after.
1  go version go1.20.1 windows/amd64   Use &ldquo;go help doc&rdquo; for more information about doc command 1 2 3 4 5 6 7 8 9  &gt; go doc json.Decoder.Decode package json // import &#34;encoding/json&#34;  func (dec *Decoder) Decode(v any) error Decode reads the next JSON-encoded value from its input and stores it in the value pointed to by v.]]></description></item><item><title>git_under_the_hood</title><link>https://decmaxn.github.io/git_under_the_hood/</link><pubDate>Mon, 20 Feb 2023 15:05:13 -0500</pubDate><author>Victor Ma</author><guid>https://decmaxn.github.io/git_under_the_hood/</guid><description><![CDATA[Meet SHA1 Every Object in Git has its own SHA1. SHA1 are unique in the universe?!
 This cryptograph concept and technology is also used for bitcoin.
 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19  :~$ mkdir gitdemo :~$ cd gitdemo/ :~/gitdemo$ echo &#34;Apple Pie&#34; | git hash-object --stdin # Create a SHA1. 23991897e13e47ed0adb91a0082c31c82fe0cbe5 :~/gitdemo$ echo &#34;Apple Pie&#34; | git hash-object --stdin -w # -w write it to GIT repository.]]></description></item><item><title>Misc_package_module</title><link>https://decmaxn.github.io/python/misc_package_module/</link><pubDate>Sat, 18 Feb 2023 17:22:55 -0500</pubDate><author>Victor Ma</author><guid>https://decmaxn.github.io/python/misc_package_module/</guid><description><![CDATA[Related imports Can be used for less typing, and mobilibility. Not recommanded
1 2  from .module_name import some_function from ..module_in_parent_folder import another_fuction   List attribute names imported via from module import * Without a init py file under compressed folder import star will get every modules
1 2 3 4 5 6 7 8  &gt;&gt;&gt; from reader.compressed import * # not recommanded way to import &gt;&gt;&gt; locals() {&#39;__name__&#39;: &#39;__main__&#39;, &#39;__doc__&#39;: None, &#39;__package__&#39;: None, &#39;__loader__&#39;: &lt;class &#39;_frozen_importlib.]]></description></item><item><title>Example_of_package_module_structure</title><link>https://decmaxn.github.io/python/example_of_package_module_structure/</link><pubDate>Sat, 18 Feb 2023 12:24:14 -0500</pubDate><author>Victor Ma</author><guid>https://decmaxn.github.io/python/example_of_package_module_structure/</guid><description><![CDATA[Create a folder structure as this: py_pkg/reader/ reader module in reader package, has a class called Reader py_pkg/reader/reader.py 
1 2 3 4 5 6 7 8 9 10 11 12 13 14 15  # class has three methods: &#34;init&#34;, &#34;close&#34; and &#34;read&#34;. class Reader: #It takes a parameter &#34;filename&#34; which is used to open a file in read mode (&#39;rt&#39;) def __init__(self, filename): # assigns the file object to an instance variable called &#34;f&#34;.]]></description></item><item><title>Package_module_path</title><link>https://decmaxn.github.io/python/package_module_path/</link><pubDate>Fri, 17 Feb 2023 18:30:24 -0500</pubDate><author>Victor Ma</author><guid>https://decmaxn.github.io/python/package_module_path/</guid><description><![CDATA[Searching path of packages and modules 1 2 3 4 5 6 7 8 9 10 11  &gt;&gt;&gt; import sys &gt;&gt;&gt; for i in range(len(sys.path)): ... print(sys.path[i]) ... /usr/lib/python38.zip /usr/lib/python3.8 /usr/lib/python3.8/lib-dynload /home/vma/.local/lib/python3.8/site-packages /usr/local/lib/python3.8/dist-packages /usr/lib/python3/dist-packages   Package and Modules There is this example package from one entries of searching path.
1 2  $ find /usr -name urllib -type d /usr/lib/python3.8/urllib   Packages are directories in sys.path contain other packages/modules, at least a module as __init__.]]></description></item></channel></rss>