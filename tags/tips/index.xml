<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title>tips - Tag - Victor Ma</title><link>https://decmaxn.github.io/tags/tips/</link><description>tips - Tag - Victor Ma</description><generator>Hugo -- gohugo.io</generator><language>en</language><copyright>This work is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License.</copyright><lastBuildDate>Thu, 16 Feb 2023 20:22:20 -0500</lastBuildDate><atom:link href="https://decmaxn.github.io/tags/tips/" rel="self" type="application/rss+xml"/><item><title>Generator</title><link>https://decmaxn.github.io/python/generator/</link><pubDate>Thu, 16 Feb 2023 20:22:20 -0500</pubDate><author>Victor Ma</author><guid>https://decmaxn.github.io/python/generator/</guid><description>What is generator Generators are a powerful tool in Python that allow you to create iterable objects on-the-fly. They are functions that use the yield statement instead of return to produce a sequence of values.
Why we need generator One of the main reasons why we need generators is that they are memory-efficient. When you create a list, for example, all the elements of the list are created and stored in memory at once.</description></item><item><title>Shadow_and_deep_copy</title><link>https://decmaxn.github.io/python/shadow_and_deep_copy/</link><pubDate>Thu, 16 Feb 2023 19:56:23 -0500</pubDate><author>Victor Ma</author><guid>https://decmaxn.github.io/python/shadow_and_deep_copy/</guid><description><![CDATA[In Python, the copy() method of a list creates a shallow copy of the list, which means that it creates a new list with a new memory address, but the new list contains references to the same objects as the original list. This means that changes made to the objects in the new list will also affect the objects in the original list, and vice versa.
1 2 3 4 5 6 7  &gt;&gt;&gt; original_list = [[1, 2, 3], [4, 5, 6], [7, 8, 9]] &gt;&gt;&gt; new_list = original_list.]]></description></item><item><title>Concise_form</title><link>https://decmaxn.github.io/python/concise_form/</link><pubDate>Thu, 16 Feb 2023 17:32:15 -0500</pubDate><author>Victor Ma</author><guid>https://decmaxn.github.io/python/concise_form/</guid><description><![CDATA[one liner for loop Instead of:
1 2 3 4 5 6  &gt;&gt;&gt; m = [] &gt;&gt;&gt; for i in range(10): ... m.append(i) ... &gt;&gt;&gt; m [0, 1, 2, 3, 4, 5, 6, 7, 8, 9]   do
1 2 3 4  &gt;&gt;&gt; [i for i in range(10)] [0, 1, 2, 3, 4, 5, 6, 7, 8, 9] &gt;&gt;&gt; {&#34;index&#34;+str(i): i*2 for i in range(3)} {&#39;index0&#39;: 0, &#39;index1&#39;: 2, &#39;index2&#39;: 4}   one liner condition Instead of:]]></description></item></channel></rss>