<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title>tips - Tag - Victor Ma</title><link>https://decmaxn.github.io/tags/tips/</link><description>tips - Tag - Victor Ma</description><generator>Hugo -- gohugo.io</generator><language>en</language><copyright>This work is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License.</copyright><lastBuildDate>Sun, 29 Dec 2024 19:11:08 -0500</lastBuildDate><atom:link href="https://decmaxn.github.io/tags/tips/" rel="self" type="application/rss+xml"/><item><title>Storage_1</title><link>https://decmaxn.github.io/azure/storage_1/</link><pubDate>Sun, 29 Dec 2024 19:11:08 -0500</pubDate><author>Victor Ma</author><guid>https://decmaxn.github.io/azure/storage_1/</guid><description><![CDATA[Storage Manually create storage account from Azure Web Console, then confirm it using the following commands
1 2 3  $ SubID=$(az account show --query id --output tsv) $ az group list --subscription $SubID --query [].name $ az storage account list --subscription $SubID --query [].name   Give myself permission to create container and upload blob
1 2 3 4  $ az ad signed-in-user show --query id -o tsv | az role assignment create \  --role &#34;Storage Blob Data Contributor&#34; \  --assignee @- \  --scope &#34;/subscriptions/$SubID/resourceGroups/trg&#34;   Let&rsquo;s assume the storage account name is tsc123tsc, create container as tsc.]]></description></item><item><title>Basic Docker Review Ecr</title><link>https://decmaxn.github.io/k8s/basic-docker-review-ecr/</link><pubDate>Mon, 12 Jun 2023 00:25:50 -0400</pubDate><author>Victor Ma</author><guid>https://decmaxn.github.io/k8s/basic-docker-review-ecr/</guid><description><![CDATA[Docker Basic Follow youtube &ldquo;Containers Office Hours | S1 E3 â€“ Build Your First Image and Store It in ECR&rdquo; by Brent Langston and Nathan Peck. Most of the following come from it&rsquo;s github repo.
Create a Hello World file and run locally 1 2 3 4 5 6 7 8 9 10  $ cat &lt;&lt;EOF &gt;brentley_docker-hello-world_app.js const express = require(&#39;express&#39;) const app = express() const port = 3000 app.]]></description></item><item><title>Homebrew Tap</title><link>https://decmaxn.github.io/homebrew-tap/</link><pubDate>Fri, 21 Apr 2023 15:16:19 +0000</pubDate><author>Victor Ma</author><guid>https://decmaxn.github.io/homebrew-tap/</guid><description><![CDATA[Homebrew Tap Currently I have only 3 taps
1 2 3 4  % brew tap homebrew/cask homebrew/cask-versions homebrew/core   When searching, the results are from those 3 taps.
1 2 3 4 5 6  % brew search aws-sam-cli ==&gt; Formulae aws-sam-cli aws-sso-cli ==&gt; Casks aws-vpn-client   Let&rsquo;s add another Tap, it&rsquo;s from AWS.
1 2 3 4 5 6 7  % brew tap aws/tap Running `brew update --auto-update`.]]></description></item><item><title>Practice Go with S3 buckets</title><link>https://decmaxn.github.io/go/practice-go-with-s3/</link><pubDate>Wed, 19 Apr 2023 13:24:06 -0400</pubDate><author>Victor Ma</author><guid>https://decmaxn.github.io/go/practice-go-with-s3/</guid><description><![CDATA[Practice Go deleting s3 buckets Create an test env
1 2  go mod init test # this will create a go.mod file go get github.com/aws/aws-sdk-go # this will add 2 requirements in go.mod file   Here is the main.go file to learn from:
1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132  package main import ( &#34;bufio&#34; &#34;fmt&#34; &#34;os&#34; &#34;strings&#34; &#34;github.]]></description></item><item><title>Cdk Multiple Stacks Cross Regions</title><link>https://decmaxn.github.io/aws/cdk-multiple-stacks-cross-regions/</link><pubDate>Sat, 15 Apr 2023 18:23:29 -0400</pubDate><author>Victor Ma</author><guid>https://decmaxn.github.io/aws/cdk-multiple-stacks-cross-regions/</guid><description><![CDATA[How to create multiple stacks in same CDK program 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18  #!/usr/bin/env python3 import os as os import aws_cdk as cdk from cdk.cdk_stack import CdkStack app = cdk.App() env_EU = cdk.Environment( account=os.environ[&#34;CDK_DEFAULT_ACCOUNT&#34;], region=&#34;eu-west-1&#34;) env_US = cdk.Environment( account=os.environ[&#34;CDK_DEFAULT_ACCOUNT&#34;], region=&#34;us-east-1&#34;) CdkStack(app, &#34;us&#34;, env=env_US) CdkStack(app, &#34;uk&#34;, env=env_EU) app.synth()   The result should be like this:]]></description></item><item><title>Free Aws Ec2 Instance by Cdk</title><link>https://decmaxn.github.io/aws/free-aws-ec2-instance-by-cdk/</link><pubDate>Tue, 11 Apr 2023 17:31:29 -0400</pubDate><author>Victor Ma</author><guid>https://decmaxn.github.io/aws/free-aws-ec2-instance-by-cdk/</guid><description><![CDATA[In my previous Free (almost) Aws Ec2 Instance blog, I used Aws Cli. It&rsquo;s good for learning, but in the real world, you need to keep creating/deleting it to save cost. Let&rsquo;s make is easy by using CDK.
app.py 1 2 3 4 5 6 7 8 9 10 11 12 13  #!/usr/bin/env python3 import aws_cdk as cdk from cdk.cdk_stack import CdkStack app = cdk.App() env = cdk.Environment( account=&#34;xxxxxxxxxxxx&#34;, region=&#34;us-east-1&#34;, ) CdkStack(app, &#34;cdk&#34;, env=env) app.]]></description></item><item><title>Azure Cli</title><link>https://decmaxn.github.io/azure/az-cli/</link><pubDate>Mon, 10 Apr 2023 13:58:51 -0400</pubDate><author>Victor Ma</author><guid>https://decmaxn.github.io/azure/az-cli/</guid><description>Official Reference.
Installation I have avoid the one command installation, and followed the step-by-step on my ubuntu client.
1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 # Get packages needed for the install process: sudo apt-get update sudo apt-get install ca-certificates curl apt-transport-https lsb-release gnupg #Download and install the Microsoft signing key: sudo mkdir -p /etc/apt/keyrings curl -sLS https://packages.</description></item><item><title>Aws Cdk with Python</title><link>https://decmaxn.github.io/python/aws-cdk-python/</link><pubDate>Thu, 06 Apr 2023 20:08:29 -0400</pubDate><author>Victor Ma</author><guid>https://decmaxn.github.io/python/aws-cdk-python/</guid><description>Prerequisites The 2.0 version of CDK is compatible with node 10.19.
1 2 3 4 5 6 7 8 9 10 $ aws --version aws-cli/2.7.13 Python/3.9.11 Linux/5.10.102.1-microsoft-standard-WSL2 exe/x86_64.ubuntu.20 prompt/off $ aws sts --profile dec $ node --version v10.19.0 $ sudo npm install -g aws-cdk@2.0.0 $ cdk --version 2.0.0 (build 4b6ce31) $ python3 --version Python 3.8.10 Later on I found Node v10.19.0 has reached end-of-life and is not supported.</description></item><item><title>Free (almost) Aws Ec2 Instance</title><link>https://decmaxn.github.io/aws/free-aws-ec2-instance/</link><pubDate>Wed, 05 Apr 2023 18:32:01 -0400</pubDate><author>Victor Ma</author><guid>https://decmaxn.github.io/aws/free-aws-ec2-instance/</guid><description>Free Trial: Try Amazon EC2 t4g.small instances powered by AWS Graviton2 processors free for up to 750 hours / month until Dec 31st 2023. https://aws.amazon.com/blogs/aws/new-t4g-instances-burstable-performance-powered-by-aws-graviton2/
Note: Although the instance is free, but I have been charge a few cents per day under category of &amp;ldquo;EC2 - Other&amp;rdquo; for type of EBS:VolumeUsage.gp2. There is no free tier or trail for EBS as far as I know.
Only follow this if you are interested with the details under the hood.</description></item><item><title>Eks_install</title><link>https://decmaxn.github.io/k8s/eks_install/</link><pubDate>Wed, 15 Mar 2023 21:51:07 -0400</pubDate><author>Victor Ma</author><guid>https://decmaxn.github.io/k8s/eks_install/</guid><description>Install eksctl and kubectl eksctl.io
1 2 3 4 5 $ curl --silent --location &amp;#34;https://github.com/weaveworks/eksctl/releases/latest/download/eksctl_$(uname -s)_amd64.tar.gz&amp;#34; | tar xz -C /tmp $ sudo mv /tmp/eksctl ~/.local/bin/ $ eksctl version 0.133.0 $ . &amp;lt;(eksctl completion bash) Amazon EKS
1 2 3 4 5 6 $ curl -O https://s3.us-west-2.amazonaws.com/amazon-eks/1.25.6/2023-01-30/bin/linux/amd64/kubectl % Total % Received % Xferd Average Speed Time Time Time Current Dload Upload Total Spent Left Speed 100 42.</description></item></channel></rss>