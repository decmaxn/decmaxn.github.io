<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title>aws - Tag - Victor Ma</title><link>https://decmaxn.github.io/tags/aws/</link><description>aws - Tag - Victor Ma</description><generator>Hugo -- gohugo.io</generator><language>en</language><copyright>This work is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License.</copyright><lastBuildDate>Sat, 15 Apr 2023 18:23:29 -0400</lastBuildDate><atom:link href="https://decmaxn.github.io/tags/aws/" rel="self" type="application/rss+xml"/><item><title>Cdk Multiple Stacks Cross Regions</title><link>https://decmaxn.github.io/aws/cdk-multiple-stacks-cross-regions/</link><pubDate>Sat, 15 Apr 2023 18:23:29 -0400</pubDate><author>Victor Ma</author><guid>https://decmaxn.github.io/aws/cdk-multiple-stacks-cross-regions/</guid><description><![CDATA[How to create multiple stacks in same CDK program 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18  #!/usr/bin/env python3 import os as os import aws_cdk as cdk from cdk.cdk_stack import CdkStack app = cdk.App() env_EU = cdk.Environment( account=os.environ[&#34;CDK_DEFAULT_ACCOUNT&#34;], region=&#34;eu-west-1&#34;) env_US = cdk.Environment( account=os.environ[&#34;CDK_DEFAULT_ACCOUNT&#34;], region=&#34;us-east-1&#34;) CdkStack(app, &#34;us&#34;, env=env_US) CdkStack(app, &#34;uk&#34;, env=env_EU) app.synth()   The result should be like this:]]></description></item><item><title>Free Aws Ec2 Instance by Cdk</title><link>https://decmaxn.github.io/aws/free-aws-ec2-instance-by-cdk/</link><pubDate>Tue, 11 Apr 2023 17:31:29 -0400</pubDate><author>Victor Ma</author><guid>https://decmaxn.github.io/aws/free-aws-ec2-instance-by-cdk/</guid><description><![CDATA[In my previous Free (almost) Aws Ec2 Instance blog, I used Aws Cli. It&rsquo;s good for learning, but in the real world, you need to keep creating/deleting it to save cost. Let&rsquo;s make is easy by using CDK.
app.py 1 2 3 4 5 6 7 8 9 10 11 12 13  #!/usr/bin/env python3 import aws_cdk as cdk from cdk.cdk_stack import CdkStack app = cdk.App() env = cdk.Environment( account=&#34;xxxxxxxxxxxx&#34;, region=&#34;us-east-1&#34;, ) CdkStack(app, &#34;cdk&#34;, env=env) app.]]></description></item><item><title>Api Gateway Under the Hood</title><link>https://decmaxn.github.io/aws/api-gateway-under-the-hood/</link><pubDate>Sun, 09 Apr 2023 16:40:18 -0400</pubDate><author>Victor Ma</author><guid>https://decmaxn.github.io/aws/api-gateway-under-the-hood/</guid><description>底层设施 AWS API Gateway使用了多个分布式系统组件来提供其服务。这些组件包括 Amazon CloudFront、Amazon Route 53、AWS Elastic Load Balancing、AWS Lambda 等等。
当您创建一个 API Gateway 时，API Gateway 会在后台自动创建一个或多个 Amazon API Gateway REST API，并为每个 REST API 创建一个 Amazon CloudFront 分发。每个分发都有一个唯一的 DNS 名称，它充当 API 的公共入口点。
当客户端发送请求到 API Gateway 时，请求将被路由到正确的 Amazon CloudFront 分发。然后，Amazon CloudFront 将请求转发到与该 REST API 关联的 AWS Elastic Load Balancing 负载均衡器。负载均衡器将请求路由到一个或多个后端服务（如 AWS Lambda 函数或 EC2 实例）。
设计构架 RestApi 在整个 API Gateway 中，AWS::ApiGateway::RestApi 位于 API Gateway 的顶层，它表示整个 API 的定义和配置。
1 2 3 4 Endpoint:Type:AWS::ApiGateway::RestApiProperties:Name:Endpoint 这里仅仅是定义了 REST API 的名称，还没有定义 API 的具体资源和方法，因为它们需要使用 AWS::ApiGateway::Resource 和 AWS::ApiGateway::Method 资源类型进行定义。在定义了资源和方法之后，您需要使用 AWS::ApiGateway::Deployment 资源类型进行部署，才能将 API 置于生效状态。</description></item><item><title>Aws Cdk with Python</title><link>https://decmaxn.github.io/python/aws-cdk-python/</link><pubDate>Thu, 06 Apr 2023 20:08:29 -0400</pubDate><author>Victor Ma</author><guid>https://decmaxn.github.io/python/aws-cdk-python/</guid><description>Prerequisites The 2.0 version of CDK is compatible with node 10.19.
1 2 3 4 5 6 7 8 9 10 $ aws --version aws-cli/2.7.13 Python/3.9.11 Linux/5.10.102.1-microsoft-standard-WSL2 exe/x86_64.ubuntu.20 prompt/off $ aws sts --profile dec $ node --version v10.19.0 $ sudo npm install -g aws-cdk@2.0.0 $ cdk --version 2.0.0 (build 4b6ce31) $ python3 --version Python 3.8.10 Later on I found Node v10.19.0 has reached end-of-life and is not supported.</description></item><item><title>Free (almost) Aws Ec2 Instance</title><link>https://decmaxn.github.io/aws/free-aws-ec2-instance/</link><pubDate>Wed, 05 Apr 2023 18:32:01 -0400</pubDate><author>Victor Ma</author><guid>https://decmaxn.github.io/aws/free-aws-ec2-instance/</guid><description>Create a free Linux EC2 instance Free Trial: Try Amazon EC2 t4g.small instances powered by AWS Graviton2 processors free for up to 750 hours / month until Dec 31st 2023. https://aws.amazon.com/blogs/aws/new-t4g-instances-burstable-performance-powered-by-aws-graviton2/
Although the instance is free, but I have been charge a few cents per day under category of &amp;ldquo;EC2 - Other&amp;rdquo; for type of EBS:VolumeUsage.gp2. There is no free tier or trail for EBS as far as I know.</description></item><item><title>Dns From Name Tag</title><link>https://decmaxn.github.io/python/dns-from-name-tag/</link><pubDate>Mon, 03 Apr 2023 01:25:46 -0400</pubDate><author>Victor Ma</author><guid>https://decmaxn.github.io/python/dns-from-name-tag/</guid><description>Create Route53 records based on EC2 Tags.Name There might have duplicated Tags.Name, so array is used to pick them up and manipulate. Tags.Name might include charactors not qualified for dns name, regular expression is used to remove them. There might be no Tags.Name, next()函数and返回生成器is used. 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 import boto3 import re import json session = boto3.</description></item><item><title>Eks_install</title><link>https://decmaxn.github.io/k8s/eks_install/</link><pubDate>Wed, 15 Mar 2023 21:51:07 -0400</pubDate><author>Victor Ma</author><guid>https://decmaxn.github.io/k8s/eks_install/</guid><description>Install eksctl and kubectl eksctl.io
1 2 3 4 5 $ curl --silent --location &amp;#34;https://github.com/weaveworks/eksctl/releases/latest/download/eksctl_$(uname -s)_amd64.tar.gz&amp;#34; | tar xz -C /tmp $ sudo mv /tmp/eksctl ~/.local/bin/ $ eksctl version 0.133.0 $ . &amp;lt;(eksctl completion bash) Amazon EKS
1 2 3 4 5 6 $ curl -O https://s3.us-west-2.amazonaws.com/amazon-eks/1.25.6/2023-01-30/bin/linux/amd64/kubectl % Total % Received % Xferd Average Speed Time Time Time Current Dload Upload Total Spent Left Speed 100 42.</description></item><item><title>Docker_Swarm_ECS</title><link>https://decmaxn.github.io/k8s/docker_swarm_ecs/</link><pubDate>Tue, 14 Mar 2023 21:32:18 -0400</pubDate><author>Victor Ma</author><guid>https://decmaxn.github.io/k8s/docker_swarm_ecs/</guid><description><![CDATA[Creat an example app with docker swarm Here is an app based on latest wordpress and mysql 5.7 docker image.
1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30  $ cat &lt;&lt;EOF &gt; stack.yaml version: &#39;3.1&#39; services: db: image: mysql:5.7 environment: MYSQL_ROOT_PASSWORD: example MYSQL_DATABASE: wordpress MYSQL_USER: wordpress MYSQL_PASSWORD: wordpress wordpress: image: wordpress:latest ports: - &#34;8000:80&#34; environment: WORDPRESS_DB_HOST: db WORDPRESS_DB_USER: wordpress WORDPRESS_DB_PASSWORD: wordpress WORDPRESS_DB_NAME: wordpress EOF $ docker swarm init $ docker stack deploy -c stack.]]></description></item><item><title>AWS_Workspace</title><link>https://decmaxn.github.io/aws/docker_on_aws_workspace/</link><pubDate>Thu, 02 Mar 2023 22:33:15 -0500</pubDate><author>Victor Ma</author><guid>https://decmaxn.github.io/aws/docker_on_aws_workspace/</guid><description><![CDATA[Develop Docker appliation in Windows workspace? Don&rsquo;t expect to see AWS created public Images based on Windows 10 Desktop, they are all Windows Server based.
However, I get myself into installing Docker Desktop on a &ldquo;Windows 10(Server 2019 based)&rdquo; workspace. Just wan to know if it works.
Create workspace 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35  Profile=&lt;profile&gt; Region=&lt;region&gt; # existing Directory Service dreictory $ aws ds --profile $Profile --region $Region \  describe-directories --query &#39;DirectoryDescriptions[].]]></description></item><item><title>Swap_ecs_task_in_service</title><link>https://decmaxn.github.io/aws/swap_ecs_task_in_service/</link><pubDate>Wed, 15 Feb 2023 08:50:56 -0500</pubDate><author>Victor Ma</author><guid>https://decmaxn.github.io/aws/swap_ecs_task_in_service/</guid><description>Start another ECS task for service before stop the original task I have made an improvement to my stop ecs task Lambda function that manages my ECS service in a more graceful manner. Previously, it would stop the task associated with my ECS service to trigger a service refresh. This would result in the service being offline for a few minutes.
With this improvement, it now increases the task count to 2, effectively launching a new task.</description></item></channel></rss>