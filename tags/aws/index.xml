<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title>AWS - Tag - Victor Ma</title><link>https://decmaxn.github.io/tags/aws/</link><description>AWS - Tag - Victor Ma</description><generator>Hugo -- gohugo.io</generator><language>en</language><copyright>This work is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License.</copyright><lastBuildDate>Tue, 14 Mar 2023 21:32:18 -0400</lastBuildDate><atom:link href="https://decmaxn.github.io/tags/aws/" rel="self" type="application/rss+xml"/><item><title>Docker_Swarm_ECS</title><link>https://decmaxn.github.io/k8s/docker_swarm_ecs/</link><pubDate>Tue, 14 Mar 2023 21:32:18 -0400</pubDate><author>Victor Ma</author><guid>https://decmaxn.github.io/k8s/docker_swarm_ecs/</guid><description><![CDATA[Creat an example app with docker swarm Here is an app based on latest wordpress and mysql 5.7 docker image.
1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30  $ cat &lt;&lt;EOF &gt; stack.yaml version: &#39;3.1&#39; services: db: image: mysql:5.7 environment: MYSQL_ROOT_PASSWORD: example MYSQL_DATABASE: wordpress MYSQL_USER: wordpress MYSQL_PASSWORD: wordpress wordpress: image: wordpress:latest ports: - &#34;8000:80&#34; environment: WORDPRESS_DB_HOST: db WORDPRESS_DB_USER: wordpress WORDPRESS_DB_PASSWORD: wordpress WORDPRESS_DB_NAME: wordpress EOF $ docker swarm init $ docker stack deploy -c stack.]]></description></item><item><title>AWS_Workspace</title><link>https://decmaxn.github.io/docker_on_aws_workspace/</link><pubDate>Thu, 02 Mar 2023 22:33:15 -0500</pubDate><author>Victor Ma</author><guid>https://decmaxn.github.io/docker_on_aws_workspace/</guid><description><![CDATA[Develop Docker appliation in Windows workspace? Don&rsquo;t expect to see AWS created public Images based on Windows 10 Desktop, they are all Windows Server based.
However, I get myself into installing Docker Desktop on a &ldquo;Windows 10(Server 2019 based)&rdquo; workspace. Just wan to know if it works.
Create workspace 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35  Profile=&lt;profile&gt; Region=&lt;region&gt; # existing Directory Service dreictory $ aws ds --profile $Profile --region $Region \  describe-directories --query &#39;DirectoryDescriptions[].]]></description></item></channel></rss>