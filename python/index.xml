<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Pythons on Victor Ma</title><link>https://decmaxn.github.io/python/</link><description>Recent content in Pythons on Victor Ma</description><generator>Hugo -- gohugo.io</generator><language>en</language><copyright>This work is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License.</copyright><lastBuildDate>Mon, 03 Apr 2023 01:25:46 -0400</lastBuildDate><atom:link href="https://decmaxn.github.io/python/index.xml" rel="self" type="application/rss+xml"/><item><title>Dns From Name Tag</title><link>https://decmaxn.github.io/python/dns-from-name-tag/</link><pubDate>Mon, 03 Apr 2023 01:25:46 -0400</pubDate><guid>https://decmaxn.github.io/python/dns-from-name-tag/</guid><description>Create Route53 records based on EC2 Tags.Name There might have duplicated Tags.Name, so array is used to pick them up and manipulate. Tags.Name might include charactors not qualified for dns name, regular expression is used to remove them. There might be no Tags.Name, next()函数and返回生成器is used. 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 import boto3 import re import json session = boto3.</description></item><item><title>Misc_package_module</title><link>https://decmaxn.github.io/python/misc_package_module/</link><pubDate>Sat, 18 Feb 2023 17:22:55 -0500</pubDate><guid>https://decmaxn.github.io/python/misc_package_module/</guid><description>Related imports Can be used for less typing, and mobilibility. Not recommanded
1 2 from .module_name import some_function from ..module_in_parent_folder import another_fuction List attribute names imported via from module import * Without a init py file under compressed folder import star will get every modules
1 2 3 4 5 6 7 8 &amp;gt;&amp;gt;&amp;gt; from reader.compressed import * # not recommanded way to import &amp;gt;&amp;gt;&amp;gt; locals() {&amp;#39;__name__&amp;#39;: &amp;#39;__main__&amp;#39;, &amp;#39;__doc__&amp;#39;: None, &amp;#39;__package__&amp;#39;: None, &amp;#39;__loader__&amp;#39;: &amp;lt;class &amp;#39;_frozen_importlib.</description></item><item><title>Example_of_package_module_structure</title><link>https://decmaxn.github.io/python/example_of_package_module_structure/</link><pubDate>Sat, 18 Feb 2023 12:24:14 -0500</pubDate><guid>https://decmaxn.github.io/python/example_of_package_module_structure/</guid><description>Create a folder structure as this: py_pkg/reader/ reader module in reader package, has a class called Reader py_pkg/reader/reader.py
1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 # class has three methods: &amp;#34;init&amp;#34;, &amp;#34;close&amp;#34; and &amp;#34;read&amp;#34;. class Reader: #It takes a parameter &amp;#34;filename&amp;#34; which is used to open a file in read mode (&amp;#39;rt&amp;#39;) def __init__(self, filename): # assigns the file object to an instance variable called &amp;#34;f&amp;#34;.</description></item><item><title>Package_module_path</title><link>https://decmaxn.github.io/python/package_module_path/</link><pubDate>Fri, 17 Feb 2023 18:30:24 -0500</pubDate><guid>https://decmaxn.github.io/python/package_module_path/</guid><description>Searching path of packages and modules 1 2 3 4 5 6 7 8 9 10 11 &amp;gt;&amp;gt;&amp;gt; import sys &amp;gt;&amp;gt;&amp;gt; for i in range(len(sys.path)): ... print(sys.path[i]) ... /usr/lib/python38.zip /usr/lib/python3.8 /usr/lib/python3.8/lib-dynload /home/vma/.local/lib/python3.8/site-packages /usr/local/lib/python3.8/dist-packages /usr/lib/python3/dist-packages Package and Modules There is this example package from one entries of searching path.
1 2 $ find /usr -name urllib -type d /usr/lib/python3.8/urllib Packages are directories in sys.path contain other packages/modules, at least a module as __init__.</description></item><item><title>Generator</title><link>https://decmaxn.github.io/python/generator/</link><pubDate>Thu, 16 Feb 2023 20:22:20 -0500</pubDate><guid>https://decmaxn.github.io/python/generator/</guid><description>What is generator Generators are a powerful tool in Python that allow you to create iterable objects on-the-fly. They are functions that use the yield statement instead of return to produce a sequence of values.
Why we need generator One of the main reasons why we need generators is that they are memory-efficient. When you create a list, for example, all the elements of the list are created and stored in memory at once.</description></item><item><title>Shadow_and_deep_copy</title><link>https://decmaxn.github.io/python/shadow_and_deep_copy/</link><pubDate>Tue, 14 Feb 2023 19:56:23 -0500</pubDate><guid>https://decmaxn.github.io/python/shadow_and_deep_copy/</guid><description>In Python, the copy() method of a list creates a shallow copy of the list, which means that it creates a new list with a new memory address, but the new list contains references to the same objects as the original list. This means that changes made to the objects in the new list will also affect the objects in the original list, and vice versa.
1 2 3 4 5 6 7 &amp;gt;&amp;gt;&amp;gt; original_list = [[1, 2, 3], [4, 5, 6], [7, 8, 9]] &amp;gt;&amp;gt;&amp;gt; new_list = original_list.</description></item><item><title>Concise_form</title><link>https://decmaxn.github.io/python/concise_form/</link><pubDate>Mon, 13 Feb 2023 17:32:15 -0500</pubDate><guid>https://decmaxn.github.io/python/concise_form/</guid><description>one liner for loop Instead of:
1 2 3 4 5 6 &amp;gt;&amp;gt;&amp;gt; m = [] &amp;gt;&amp;gt;&amp;gt; for i in range(10): ... m.append(i) ... &amp;gt;&amp;gt;&amp;gt; m [0, 1, 2, 3, 4, 5, 6, 7, 8, 9] do
1 2 3 4 &amp;gt;&amp;gt;&amp;gt; [i for i in range(10)] [0, 1, 2, 3, 4, 5, 6, 7, 8, 9] &amp;gt;&amp;gt;&amp;gt; {&amp;#34;index&amp;#34;+str(i): i*2 for i in range(3)} {&amp;#39;index0&amp;#39;: 0, &amp;#39;index1&amp;#39;: 2, &amp;#39;index2&amp;#39;: 4} one liner condition Instead of:</description></item><item><title>Exception</title><link>https://decmaxn.github.io/python/exception/</link><pubDate>Sun, 12 Feb 2023 21:11:12 -0500</pubDate><guid>https://decmaxn.github.io/python/exception/</guid><description>Exception Mechanism for interrupting normal program flow and continuing in surrounding context.
event is raising an exception handling an exception with exception handler unhandled exceptions cause termination Exception objects transferred from event to handler Exception are ubiquitous in Python compare with other programing languages.
exceptional.py with unhandled exception 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 DIGIT_MAP = { &amp;#39;zero&amp;#39;: &amp;#39;0&amp;#39;, &amp;#39;one&amp;#39;: &amp;#39;1&amp;#39;, &amp;#39;two&amp;#39;: &amp;#39;2&amp;#39;, &amp;#39;three&amp;#39;: &amp;#39;3&amp;#39;, &amp;#39;four&amp;#39;: &amp;#39;4&amp;#39;, &amp;#39;five&amp;#39;: &amp;#39;5&amp;#39;, &amp;#39;six&amp;#39;: &amp;#39;6&amp;#39;, &amp;#39;seven&amp;#39;: &amp;#39;7&amp;#39;, &amp;#39;eight&amp;#39;: &amp;#39;8&amp;#39;, &amp;#39;nine&amp;#39;: &amp;#39;9&amp;#39;, } def convert(s): number = &amp;#39;&amp;#39; for token in s: number += DIGIT_MAP[token] x = int(number) return x Now let&amp;rsquo;s make a good call and an exception</description></item><item><title>Function</title><link>https://decmaxn.github.io/python/function/</link><pubDate>Sun, 12 Feb 2023 19:09:37 -0500</pubDate><guid>https://decmaxn.github.io/python/function/</guid><description>Simple function 1 2 3 4 5 6 def greeting(name): # order matters, define first print(&amp;#34;Hello&amp;#34;, name) #main program input_name = input(&amp;#34;Enter your name:\n&amp;#34;) greeting(input_name) Scope The input_name is a global var and has global scope,
1 2 3 # name is not defined - cause it&amp;#39;s defined and only avaible in the func # print(&amp;#34;Thanks&amp;#34;, name) print(&amp;#34;Thanks&amp;#34;, input_name) # input_name is defined outside of func This greeting_global function uses a global var</description></item><item><title>Venv and API call</title><link>https://decmaxn.github.io/python/venv_and_api/</link><pubDate>Sun, 12 Feb 2023 17:12:35 -0500</pubDate><guid>https://decmaxn.github.io/python/venv_and_api/</guid><description>Venv Creating virtual env, make sure to slect vscode python interpreter after.
1 2 3 4 $ python3 -m venv venv $ source venv/bin/activate (venv) $ pip3 install requests $ deactivate Api call example First sign up at Open weather and get an API key.
1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 import requests # Copy/paste from Open weatcher:&amp;#34;https://api.</description></item><item><title>Loop_list_and_dictionary</title><link>https://decmaxn.github.io/python/loop_list_and_dictionary/</link><pubDate>Sun, 12 Feb 2023 16:53:04 -0500</pubDate><guid>https://decmaxn.github.io/python/loop_list_and_dictionary/</guid><description>Two loop variables in one loop with items method of dictionary This way, you can get both the key and value of each key value pair at the same time
1 2 3 4 5 6 7 8 Chars = { &amp;#39;letters&amp;#39;: &amp;#39;abcde...&amp;#39;, &amp;#39;numbers&amp;#39;: 1234567890, &amp;#39;special&amp;#39;: &amp;#39;!@#$%...&amp;#39; } for key, value in Chars.items(): # items method of dictionary print(key,&amp;#39;includes&amp;#39;,value) Dictionary represent object 1 2 3 4 5 6 7 8 9 10 11 12 contacts = { # use dictionary for object &amp;#34;number&amp;#34;: 4, &amp;#34;students&amp;#34;: [ #List of dictionaries {&amp;#34;name&amp;#34;:&amp;#34;Sarah&amp;#34;, &amp;#34;email&amp;#34;:&amp;#34;sarah@email.</description></item><item><title>Dictionary</title><link>https://decmaxn.github.io/python/dictionary/</link><pubDate>Sat, 11 Feb 2023 15:41:50 -0500</pubDate><guid>https://decmaxn.github.io/python/dictionary/</guid><description>Compare with javascript object In Python, dictionaries are data structures that store key-value pairs. Each key maps to a unique value within the dictionary, and you can use the keys to look up the corresponding values. For example:
1 2 person = {&amp;#39;name&amp;#39;: &amp;#39;John&amp;#39;, &amp;#39;age&amp;#39;: 32, &amp;#39;city&amp;#39;: &amp;#39;New York&amp;#39;} print(person[&amp;#39;name&amp;#39;]) # Output: John In JavaScript, objects serve a similar purpose as dictionaries in Python. They also store key-value pairs, and you can use the keys to look up the corresponding values.</description></item><item><title>List_and_loops</title><link>https://decmaxn.github.io/python/list_and_loops/</link><pubDate>Fri, 10 Feb 2023 13:32:46 -0500</pubDate><guid>https://decmaxn.github.io/python/list_and_loops/</guid><description>Lists and Loop 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 empty_list = [] print(empty_list) str_list = [&amp;#34;hello&amp;#34;,&amp;#34;world&amp;#34;,&amp;#34;4.5&amp;#34;] print(str_list) print(&amp;#34;The first item of str_list is &amp;#34; + str(str_list[0])) # Refer to a item in the list mixed_list=[&amp;#34;hello&amp;#34;,100,4.5] print(mixed_list) mixed_list.append(&amp;#34;AppendedItem&amp;#34;) # Append method print(mixed_list) if &amp;#34;AppendedItem&amp;#34; in mixed_list: mixed_list.remove(&amp;#34;AppendedItem&amp;#34;) # Remove method print(&amp;#34;AppendedItem is exist and removed&amp;#34;) print(mixed_list) del mixed_list[0] # Use del if you want to use the sequence number print(mixed_list) list_list = [empty_list,str_list,mixed_list] print(list_list) for x in list_list: print(x) Range 1 2 3 4 5 6 7 8 9 10 11 expenses = [] total = 0 num_expenses = int(input(&amp;#34;Enter nubmer of expenses:\n&amp;#34;)) for i in range(num_expenses): expenses.</description></item><item><title>Simple math caculation</title><link>https://decmaxn.github.io/python/age_calculator/</link><pubDate>Thu, 09 Feb 2023 11:24:40 -0500</pubDate><guid>https://decmaxn.github.io/python/age_calculator/</guid><description>Install Python and Hello world Make sure you have it installed
1 2 3 4 5 6 7 8 9 10 11 $ python3 --version Python 3.8.10 $ python3 Python 3.8.10 (default, Nov 14 2022, 12:59:47) [GCC 9.4.0] on linux Type &amp;#34;help&amp;#34;, &amp;#34;copyright&amp;#34;, &amp;#34;credits&amp;#34; or &amp;#34;license&amp;#34; for more information. &amp;gt;&amp;gt;&amp;gt; $ cat hello_world.py print(&amp;#34;Hello world!&amp;#34;) $ python3 hello_world.py Hello world! extension for vscode After installed ms-python.python vscode extention and select Python interpreter（I never know that I have python2 pre-installed too), I can now click on run button to run the .</description></item><item><title>Condition_and_module</title><link>https://decmaxn.github.io/python/condition_and_module/</link><pubDate>Wed, 08 Feb 2023 12:33:27 -0500</pubDate><guid>https://decmaxn.github.io/python/condition_and_module/</guid><description>Comparators 1 2 3 4 5 &amp;gt;&amp;gt;&amp;gt; temp = 95 # Assignment &amp;gt;&amp;gt;&amp;gt; temp == 85 # Comparator False &amp;gt;&amp;gt;&amp;gt; temp == 95 True Condition and logical operator 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 temp = int(input(&amp;#34;What is the temporature?\n&amp;#34;)) if temp &amp;lt;= 95 and temp &amp;gt;=45: # AND Logical operators print(&amp;#34;Nice, go outside&amp;#34;) #indented code inside a &amp;#34;Code block&amp;#34; print(&amp;#34;There is 4 spaces before this line insead of a tab&amp;#34;) # Tab or 4 spaces # print(&amp;#34;There is 2 spaces before this line insead of a tab or 4 spaces&amp;#34;) IndentationError elif temp &amp;gt; 95: print(&amp;#34;Too hot, stay inside&amp;#34;) else: print(&amp;#34;Too cold, stay inside&amp;#34;) if temp &amp;gt; 95 or temp &amp;lt; 45: # OR logical opeartor print(&amp;#34;stay inside&amp;#34;) else: print(&amp;#34;Go outside&amp;#34;) forcast = &amp;#34;rain&amp;#34; if not forcast == &amp;#34;rain&amp;#34;: # Not logical operator print(&amp;#34;Go outside&amp;#34;) else: print(&amp;#34;stay inside&amp;#34;) raining = True # Condition with Boolean Data type VAR if raining: # It&amp;#39;s more like plain english print(&amp;#34;Stay inside, it&amp;#39;s raining&amp;#34;) Modules Not only built-in types are installed together with Python, Python standard Library, etc.</description></item></channel></rss>